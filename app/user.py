import re
import html
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InputMediaPhoto
from aiogram.filters import CommandStart, Command, CommandObject
from zoneinfo import ZoneInfo
from datetime import datetime, timedelta
from app.keyboard import payment_keyboard
import app.keyboard as kb
from app.gen import addkey

from app.database.requests import set_user, find_key, find_dayend, create_payment, save_message, find_paymethod_id
from app.database.requests import delpaymethod_id
MOSCOW_TZ = ZoneInfo("Europe/Moscow")

user = Router()

file_id01="AgACAgIAAxkBAAIDJGi98rSpeXZ-DD7LjnQjGlVQhMnzAAI3_zEbYF_wSUQ71x7vAxTSAQADAgADdwADNgQ"
file_id02="AgACAgIAAxkBAAIDNmi-11DgQxRxzRElzTQPzwbZ2553AALw8jEbYF_4SX2hWNO4hiqDAQADAgADdwADNgQ"

def escape_markdown(text: str) -> str:
    return re.sub(r'([_\*\[\]\(\)~`>#+\-=|{}.!])', r'\\\1', text)


@user.message(CommandStart())
async def cmd_start(message: Message, command: CommandObject):
    tg_id = message.from_user.id
    ref_id = command.args
    if ref_id and ref_id.isdigit():
        ref_id = int(ref_id)
        await set_user(tg_id, ref_id)
    else:
        await set_user(tg_id, None)

    is_key = await find_key(tg_id)
    if not is_key:
        await message.answer(text='–ú—ã –∑–Ω–∞–ª–∏, —á—Ç–æ –¢—ã –ø—Ä–∏–¥–µ—à—å –∫ –Ω–∞–º.\n\n'
                                  '–ù–∞—à vpn –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –ª—É—á—à–∏–µ —É—Å–ª–æ–≤–∏—è:\n'
                                  '- –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Å–∞–π—Ç–∞ –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π;\n'
                                  '- –≤—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ;\n'
                                  '- –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –º–µ–Ω—å—à–µ –º–∏–Ω—É—Ç—ã;\n'
                                  '- –ø–æ–ª–Ω–∞—è –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.\n\n'
                                  '–ê–∫—Ç–∏–≤–∏—Ä—É–π —Ç—Ä—ë—Ö–¥–Ω–µ–≤–Ω—ã–π –ø—Ä–æ–±–Ω—ã–π –ø–µ—Ä–∏–æ–¥ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å üåå',
                             reply_markup=kb.main)
    else:
        is_day = await find_dayend(tg_id)
        now_moscow = datetime.now(tz=MOSCOW_TZ)

        if is_day.tzinfo is None:
            is_day = is_day.replace(tzinfo=MOSCOW_TZ)

        if is_day < now_moscow:
            await message.answer(
                text=f"–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>{tg_id}</code>\n\n"
                     f"–°—Ç–∞—Ç—É—Å:\n- –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ ‚ùÑÔ∏è\n\n"
                     f"–ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
                parse_mode="HTML",
                reply_markup=kb.main_old
            )
        else: await message.answer(
            text=f"–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>{tg_id}</code>\n\n"
                 f"—Å—Ç–∞—Ç—É—Å:\n"
                 f"- –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {is_day.strftime('%d.%m.%Y')}üåü\n\n"
                 f"–ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            parse_mode="HTML",
            reply_markup=kb.main_old
        )


@user.callback_query(F.data == 'home')
async def home(callback: CallbackQuery):
    tg_id = callback.from_user.id
    is_day = await find_dayend(tg_id)
    now_moscow = datetime.now(tz=MOSCOW_TZ)
    if is_day.tzinfo is None:
        is_day = is_day.replace(tzinfo=MOSCOW_TZ)

    if is_day < now_moscow:
        await callback.message.edit_media(InputMediaPhoto(
            media=file_id02,
            caption=f"–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>{tg_id}</code>\n\n"
                 f"–°—Ç–∞—Ç—É—Å:\n- –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞ ‚ùÑÔ∏è\n\n"
                 f"–ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            parse_mode="HTML"),
            reply_markup=kb.main_old
        )
    else:
        await callback.message.edit_media(InputMediaPhoto(
            media=file_id01,
            caption=f"–í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–¥: <code>{tg_id}</code>\n\n"
                 f"–°—Ç–∞—Ç—É—Å:\n"
                 f"- –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞ –¥–æ: {is_day.strftime('%d.%m.%Y')}üåü\n\n"
                 f"–ø–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É",
            parse_mode="HTML"),
            reply_markup=kb.main_old
        )


@user.message(Command('help'))
async def cmd_help(message: Message):
    tg_id = message.from_user.id
    url = await create_payment(tg_id)
    await message.answer(f"üí≥ –û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n{url}")


@user.message(Command('subscribe'))
async def cmd_sub(message: Message):
    tg_id = message.from_user.id
    paymenthodid = await find_paymethod_id(tg_id)
    if not paymenthodid:
        await message.answer(
            'üå† <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü ‚Äî 150‚ÇΩ</b>\n'
            '‚Äî –î–µ–Ω—å–≥–∏ –±—É–¥—É—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü.\n'
            '‚Äî –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.\n'
            '‚Äî –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ.\n\n'
            'üìú <b>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</b> –ø–æ–¥–∫–ª—é—á–∞—è—Å—å, –¢—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —É—Å–ª–æ–≤–∏—è\n'
            '–µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è.',
            parse_mode="HTML",
            reply_markup=kb.give_money
        )
    else:
        await message.answer(
            'üîπ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü ‚Äî 150‚ÇΩ</b>\n'
            '‚Äî –î–µ–Ω—å–≥–∏ –±—É–¥—É—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü.\n'
            '‚Äî –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.\n'
            '‚Äî –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ\n\n'
            'üìú <b>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</b> –ø–æ–¥–∫–ª—é—á–∞—è—Å—å, –¢—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —É—Å–ª–æ–≤–∏—è\n'
            '–µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è.',
            parse_mode="HTML",
            reply_markup=kb.cancelautopay
        )


@user.message(Command('ref_programm'))
async def cmd_ref(message: Message):
    tg_id = message.from_user.id
    BOT_USERNAME = 'test0viybotnafig_bot'
    ref_link = f"https://t.me/{BOT_USERNAME}?start={tg_id}"
    escaped_link = escape_markdown(ref_link)
    await message.answer(
        f"*–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ECHALON*\n\n"
        f"–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞, –æ—Ñ–æ—Ä–º–∏–≤—à–µ–≥–æ –ø–æ–¥–ø–∏—Å–∫—É,\n"
        f"–¢–≤–æ–π –¥–æ—Å—Ç—É–ø –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è –Ω–∞ 7 –¥–Ω–µ–π\.\n\n"
        f"*–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n`{escaped_link}`",
        disable_web_page_preview=True,
        parse_mode="MarkdownV2",
        reply_markup=kb.go_home
    )


@user.callback_query(F.data == 'period')
async def period(callback: CallbackQuery):
    tg_id = callback.from_user.id
    is_key = await find_key(tg_id)
    if not is_key:
        await callback.answer('')
        await callback.message.delete()
        await callback.message.answer('*–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:*',
                                         parse_mode="MarkdownV2",
                                         reply_markup=kb.gadgets)
    else:
        is_day = await find_dayend(tg_id)
        now_moscow = datetime.now(tz=MOSCOW_TZ)
        if is_day.tzinfo is None:
            is_day = is_day.replace(tzinfo=MOSCOW_TZ)
        if is_day > now_moscow:
            await callback.answer('')
            await callback.message.delete()
            await callback.message.answer('*–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ:*',
                                             parse_mode="MarkdownV2",
                                             reply_markup=kb.gadgets_old)
        else:
            await callback.message.delete()
            await callback.message.answer('*–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –ø–æ–¥–ø–∏—Å–∫–∏*',
                                               parse_mode="MarkdownV2",
                                               reply_markup=kb.go_pay)


@user.callback_query(F.data == 'android')
async def connect_an(callback: CallbackQuery):
    user_id = callback.from_user.id
    is_key = await find_key(user_id)
    if not is_key:
      await addkey(user_id)
      is_key = await find_key(user_id)
      await callback.answer('')
      await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                       f'<b>‚Ññ1</b> - —Å–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                       f' <a href="https://play.google.com'
                                       f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                       "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                       "<b>‚Ññ3</b> - –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É v2RayTun –∏ –Ω–∞–∂–º–∏ –Ω–∞ <b>+</b>"
                                       " –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
                                       "<b>‚Ññ4</b> -  –í—ã–±–µ—Ä–∏ ¬´–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                       "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n\n"
                                       f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                       disable_web_page_preview=True,
                                       parse_mode="HTML",
                                    reply_markup=kb.downloadand)
    else: await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                           f'<b>‚Ññ1</b> - —Å–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                           f' <a href="https://play.google.com'
                                           f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                           "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                           "<b>‚Ññ3</b> - –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É v2RayTun –∏ –Ω–∞–∂–º–∏ –Ω–∞ <b>+</b>"
                                           " –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
                                           "<b>‚Ññ4</b> - –í—ã–±–µ—Ä–∏ ¬´–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                           "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n\n"
                                           f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                           disable_web_page_preview=True,
                                           parse_mode="HTML",
                                           reply_markup=kb.downloadand)


@user.callback_query(F.data == 'iphone')
async def connect_i(callback: CallbackQuery):
    user_id = callback.from_user.id
    is_key = await find_key(user_id)
    if not is_key:
      await addkey(user_id)
      is_key = await find_key(user_id)
      await callback.answer('')
      await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                       f'<b>‚Ññ1</b> - C–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                       f' <a href="https://play.google.com'
                                       f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                       "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                       "<b>‚Ññ3</b> - –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É v2RayTun –∏ –Ω–∞–∂–º–∏ –Ω–∞ <b>+</b>"
                                       " –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
                                       "<b>‚Ññ4</b> -  –í—ã–±–µ—Ä–∏ ¬´–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                       "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n\n"
                                       f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                       disable_web_page_preview=True,
                                       parse_mode="HTML",
                                     reply_markup=kb.downloadiph)
    else: await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                           f'<b>‚Ññ1</b> - C–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                           f' <a href="https://play.google.com'
                                           f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                           "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                           "<b>‚Ññ3</b> - –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É v2RayTun –∏ –Ω–∞–∂–º–∏ –Ω–∞ <b>+</b>"
                                           " –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
                                           "<b>‚Ññ4</b> -  –í—ã–±–µ—Ä–∏ ¬´–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                           "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n\n"
                                           f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                           disable_web_page_preview=True,
                                           parse_mode="HTML",
                                           reply_markup=kb.downloadiph)


@user.callback_query(F.data == 'huawei')
async def connect_hu(callback: CallbackQuery):
    user_id = callback.from_user.id
    is_key = await find_key(user_id)
    if not is_key:
      await addkey(user_id)
      is_key = await find_key(user_id)
      await callback.answer('')
      await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                       f'<b>‚Ññ1</b> - C–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                       f' <a href="https://play.google.com'
                                       f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                       "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                       "<b>‚Ññ3</b> - –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É v2RayTun –∏ –Ω–∞–∂–º–∏ –Ω–∞ <b>+</b>"
                                       " –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
                                       "<b>‚Ññ4</b> -  –í—ã–±–µ—Ä–∏ ¬´–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                       "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n\n"
                                       f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                       disable_web_page_preview=True,
                                       parse_mode="HTML",
                                     reply_markup=kb.downloadHUA)
    else: await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                           f'<b>‚Ññ1</b> - C–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                           f' <a href="https://play.google.com'
                                           f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                           "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                           "<b>‚Ññ3</b> - –ó–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É v2RayTun –∏ –Ω–∞–∂–º–∏ –Ω–∞ <b>+</b>"
                                           " –≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É\n"
                                           "<b>‚Ññ4</b> -  –í—ã–±–µ—Ä–∏ ¬´–ò–º–ø–æ—Ä—Ç –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                           "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –∫—Ä—É–≥–ª—É—é –∫–Ω–æ–ø–∫—É –≤–∫–ª—é—á–µ–Ω–∏—è\n\n"
                                           f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                           disable_web_page_preview=True,
                                           parse_mode="HTML",
                                           reply_markup=kb.downloadHUA)



@user.callback_query(F.data == 'windows')
async def connect_win(callback: CallbackQuery):
    user_id = callback.from_user.id
    is_key = await find_key(user_id)
    if not is_key:
      await addkey(user_id)
      is_key = await find_key(user_id)
      await callback.answer('')
      await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                       f'<b>‚Ññ1</b> - –°–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                       f' <a href="https://play.google.com'
                                       f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                       "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                       "<b>‚Ññ3</b> - –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–π –∏ –∑–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É ¬´NekoBox¬ª –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
                                       "<b>‚Ññ4</b> - –í–∫–ª—é—á–∏ —Ä–µ–∂–∏–º TUN –≤ –ø—Ä–∞–≤–æ–º –≤–µ–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É \n"
                                       "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ –ø—É—Å—Ç–æ–º—É –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤—É"
                                       " –∏ –≤—ã–±–µ—Ä–∏ ¬´–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                       "<b>‚Ññ6</b> - –ù–∞–∂–º–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ –ø–æ—è–≤–∏–≤—à–∏–º—É—Å—è –ø—Ä–æ—Ñ–∏–ª—é"
                                       " –∏ –≤—ã–±–µ—Ä–∏ ¬´–ó–∞–ø—É—Å—Ç–∏—Ç—å¬ª\n\n"
                                       f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                       disable_web_page_preview=True,
                                       parse_mode="HTML",
                                     reply_markup=kb.downloadwin)
    else: await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                           f'<b>‚Ññ1</b> - –°–∫–∞—á–∞–π –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ'
                                           f' <a href="https://play.google.com'
                                           f'/store/apps/details?id=com.v2raytun.android">v2RayTun</a>'"\n"
                                           "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                           "<b>‚Ññ3</b> - –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–π –∏ –∑–∞–ø—É—Å—Ç–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É ¬´NekoBox¬ª –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞\n"
                                           "<b>‚Ññ4</b> - –í–∫–ª—é—á–∏ —Ä–µ–∂–∏–º TUN –≤ –ø—Ä–∞–≤–æ–º –≤–µ–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É \n"
                                           "<b>‚Ññ5</b> - –ù–∞–∂–º–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ –ø—É—Å—Ç–æ–º—É –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤—É"
                                           " –∏ –≤—ã–±–µ—Ä–∏ ¬´–î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–∑ –±—É—Ñ–µ—Ä–∞ –æ–±–º–µ–Ω–∞¬ª\n"
                                           "<b>‚Ññ6</b> - –ù–∞–∂–º–∏ –ø—Ä–∞–≤–æ–π –∫–Ω–æ–ø–∫–æ–π –º—ã—à–∏ –ø–æ –ø–æ—è–≤–∏–≤—à–∏–º—É—Å—è –ø—Ä–æ—Ñ–∏–ª—é"
                                           " –∏ –≤—ã–±–µ—Ä–∏ ¬´–ó–∞–ø—É—Å—Ç–∏—Ç—å¬ª\n\n"
                                           f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                           disable_web_page_preview=True,
                                           parse_mode="HTML",
                                           reply_markup=kb.downloadwin)


@user.callback_query(F.data == 'macos')
async def connect_mc(callback: CallbackQuery):
    user_id = callback.from_user.id
    is_key = await find_key(user_id)
    if not is_key:
      await addkey(user_id)
      is_key = await find_key(user_id)
      await callback.answer('')
      await callback.message.edit_text(f"`{is_key}`",
                                     parse_mode="MarkdownV2",
                                     reply_markup=kb.downloaddich)
    else: await callback.message.edit_text(f"`{is_key}`",
                                           parse_mode="MarkdownV2",
                                           reply_markup=kb.downloaddich)


@user.callback_query(F.data == 'androidtv')
async def connect_antv(callback: CallbackQuery):
    user_id = callback.from_user.id
    is_key = await find_key(user_id)
    if not is_key:
      await addkey(user_id)
      is_key = await find_key(user_id)
      await callback.answer('')
      await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                       f"<b>‚Ññ1</b> - –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—É–ª—å—Ç –Ω–∞ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ\n"
                                       "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                       "<b>‚Ññ3</b> - –£—Å—Ç–∞–Ω–æ–≤–∏ v2RayTun –Ω–∞ Android TV"
                                       "<b>‚Ññ4</b> - –ó–∞–ø—É—Å—Ç–∏ v2RayTun –∏ –≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç ¬´—Ä—É—á–Ω–æ–π –≤–≤–æ–¥¬ª\n"
                                       "<b>‚Ññ5</b> - –í—Å—Ç–∞–≤—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏—Å–ø–æ–ª—å–∑—É—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—É–ª—å—Ç\n"
                                       "<b>‚Ññ6</b> - –ù–∞–∂–º–∏ <b>–û–∫</b>\n\n"
                                       f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                       disable_web_page_preview=True,
                                       parse_mode="HTML",
                                     reply_markup=kb.downloadTV)
    else: await callback.message.edit_text(f'<b>–ò–ù–°–¢–†–£–ö–¶–ò–Ø:</b>\n\n'
                                           f"<b>‚Ññ1</b> - –£—Å—Ç–∞–Ω–æ–≤–∏ –ø—É–ª—å—Ç –Ω–∞ —Å–≤–æ–π —Ç–µ–ª–µ—Ñ–æ–Ω –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ\n"
                                           "<b>‚Ññ2</b> - –ù–∞–∂–º–∏ –Ω–∞ –∫–ª—é—á –¥–æ—Å—Ç—É–ø–∞ c–Ω–∏–∑—É ( –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å vless://)\n"
                                           "<b>‚Ññ3</b> - –£—Å—Ç–∞–Ω–æ–≤–∏ v2RayTun –Ω–∞ Android TV"
                                           "<b>‚Ññ4</b> - –ó–∞–ø—É—Å—Ç–∏ v2RayTun –∏ –≤—ã–±–µ—Ä–∏ –ø—É–Ω–∫—Ç ¬´—Ä—É—á–Ω–æ–π –≤–≤–æ–¥¬ª\n"
                                           "<b>‚Ññ5</b> - –í—Å—Ç–∞–≤—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á –∏—Å–ø–æ–ª—å–∑—É—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –ø—É–ª—å—Ç\n"
                                           "<b>‚Ññ6</b> - –ù–∞–∂–º–∏ <b>–û–∫</b>\n\n"
                                           f"<blockquote expandable><code>{html.escape(is_key)}</code></blockquote>",
                                           disable_web_page_preview=True,
                                           parse_mode="HTML",
                                           reply_markup=kb.downloadTV)


@user.callback_query(F.data == 'refka')
async def refka(callback: CallbackQuery):
    tg_id = callback.from_user.id
    BOT_USERNAME = 'test0viybotnafig_bot'
    ref_link = f"https://t.me/{BOT_USERNAME}?start={tg_id}"
    escaped_link = escape_markdown(ref_link)
    await callback.answer('')
    await callback.message.delete()
    await callback.message.answer(
        f"*–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ ECHALON*\n\n"
        f"–ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞, –æ—Ñ–æ—Ä–º–∏–≤—à–µ–≥–æ –ø–æ–¥–ø–∏—Å–∫—É,\n"
        f"–¢–≤–æ–π –¥–æ—Å—Ç—É–ø –ø—Ä–æ–¥–ª–µ–≤–∞–µ—Ç—Å—è –Ω–∞ 7 –¥–Ω–µ–π\.\n\n"
        f"*–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n`{escaped_link}`",
        parse_mode="MarkdownV2",
        reply_markup=kb.go_home
    )


@user.callback_query(F.data == 'pay')
async def sub(callback: CallbackQuery):
    tg_id = callback.from_user.id
    paymenthodid = await find_paymethod_id(tg_id)
    if not paymenthodid:
        await callback.answer('')
        await callback.message.delete()
        await callback.message.answer(
            'üå† <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü ‚Äî 150‚ÇΩ</b>\n'
            '‚Äî –î–µ–Ω—å–≥–∏ –±—É–¥—É—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü.\n'
            '‚Äî –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.\n'
            '‚Äî –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ.\n\n'
            'üìú <b>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</b> –ø–æ–¥–∫–ª—é—á–∞—è—Å—å, –¢—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —É—Å–ª–æ–≤–∏—è\n'
            '–µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è.',
            parse_mode="HTML",
            reply_markup=kb.give_money
        )
    else:
        await callback.answer('')
        await callback.message.delete()
        await callback.message.answer(
            'üîπ <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –º–µ—Å—è—Ü ‚Äî 150‚ÇΩ</b>\n'
            '‚Äî –î–µ–Ω—å–≥–∏ –±—É–¥—É—Ç —Å–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü.\n'
            '‚Äî –û—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ –º–æ–∂–Ω–æ –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –≤ —ç—Ç–æ–º —Ä–∞–∑–¥–µ–ª–µ.\n'
            '‚Äî –ü—Ä–∏ –æ—Ç–∫–ª—é—á–µ–Ω–∏–∏ –¥–æ—Å—Ç—É–ø —Å–æ—Ö—Ä–∞–Ω–∏—Ç—Å—è –¥–æ –∫–æ–Ω—Ü–∞ –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ\n\n'
            'üìú <b>–í–∞–∂–Ω–æ –∑–Ω–∞—Ç—å:</b> –ø–æ–¥–∫–ª—é—á–∞—è—Å—å, –¢—ã –ø—Ä–∏–Ω–∏–º–∞–µ—à—å —É—Å–ª–æ–≤–∏—è\n'
            '–µ–∂–µ–º–µ—Å—è—á–Ω–æ–≥–æ —Å–ø–∏—Å–∞–Ω–∏—è.',
            parse_mode="HTML",
            reply_markup=kb.cancelautopay
        )

@user.callback_query(F.data == 'plsno')
async def no(callback: CallbackQuery):
    tg_id = callback.from_user.id
    await delpaymethod_id(tg_id)
    await callback.answer('')
    await callback.message.edit_text(
        '–í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–∏–ª–∏ –∞–≤—Ç–æ–ø—Ä–æ–¥–ª–µ–Ω–∏–µ',
        reply_markup=kb.on_main
    )


@user.callback_query(F.data == 'doitpls')
async def pay(callback: CallbackQuery):
    tg_id = callback.from_user.id
    payment_url = await create_payment(tg_id)
    kburl = payment_keyboard(payment_url)
    message_id = callback.message.message_id
    await save_message(tg_id, message_id)
    await callback.message.edit_text(
        f"üí≥ –û–ø–ª–∞—Ç–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:\n{payment_url}",
        reply_markup=kburl
    )


@user.message(F.photo)
async def get_photo(message: Message):
    await message.answer(f'ID —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏: {message.photo[-1].file_id}')