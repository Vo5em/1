from config import bot
from aiogram.types import Message, CallbackQuery
from app.database.models import async_session, User, Order
from sqlalchemy import select, update, delete, desc
import app.keyboard as kb


async def notify_before_end(tg_id: int):
    await bot.send_message(tg_id, "‚ö†Ô∏è –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑ 24 —á–∞—Å–∞!", reply_markup=kb.go_pay)


async def notify_end(tg_id: int):
    await bot.send_message(tg_id, "üî¥ –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞.", reply_markup=kb.go_pay)


async def notify_spss(tg_id: int):
    print("üî• notify_sps_test –≤—ã–∑–≤–∞–Ω–∞")
    async with async_session() as session:
        result = await session.execute(select(User).where(User.tg_id == tg_id))
        user = result.scalars().first()

        if not user:
            print(f"[notify_sps] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å tg_id={tg_id} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        if user.message_id:
            try:
                await bot.delete_message(chat_id=tg_id, message_id=user.message_id)
                print(f"[notify_sps] –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {user.message_id} –¥–ª—è {tg_id}")
            except Exception as e:
                print(f"[notify_sps] –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ä–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

        try:
            msg = await bot.send_message(
                chat_id=tg_id,
                text="–ü–æ–∑–¥—Ä–∞–≤–ª—è—é üéâ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø–æ–¥–ø–∏—Å–∫—É!",
                reply_markup=kb.go_pay
            )
            await session.commit()
            print(f"[notify_sps] –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ {msg.message_id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {tg_id}")
        except Exception as e:
            print(f"[notify_sps] –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
